<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>跛足的登山者</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.liuyong520.cn/"/>
  <updated>2019-04-27T12:11:10.273Z</updated>
  <id>http://www.liuyong520.cn/</id>
  
  <author>
    <name>xxydliuy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo之环境搭建</title>
    <link href="http://www.liuyong520.cn/2017/08/27/hexo-install/"/>
    <id>http://www.liuyong520.cn/2017/08/27/hexo-install/</id>
    <published>2017-08-27T02:56:51.000Z</published>
    <updated>2019-04-27T12:11:10.273Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Apr 28 2019 15:11:59 GMT+0800 (GMT+08:00) --><p>如果你和我一样是小白，那么恭喜你！看完这篇文章，你也可以拥有一个这样的博客啦！</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在以前我们要维护一个专属于自己的blog，是比较麻烦的，要购买服务器，部署博客程序到服务器，还要维护相关数据和网络。这一类blog最为典型的例子就是WordPress。而今天我们要介绍的是如何基于Hexo博客快速的搭建我们自己服务器系列。</p><h2 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><p>hexo 是基于node.js环境的，所以安装前，您必须检查电脑中是否已安装下列应用程序：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a><br>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p></p><p>如果您的电脑中未安装Node，那么就需要安装Node.js<br>详细安装步骤参考：<a href="http://www.liuyong520.cn/2017/08/26/nodejs-install/">http://www.liuyong520.cn/2017/08/26/nodejs-install/</a></p><p>再安装Hexo，在命令行（即Git Bash）运行以下命令：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p></p><p>至此Hexo的环境就搭建好了，下一步验证一下hexo<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">MacBook-Pro:_posts xxydliuyss$ hexo version</span><br><span class="line">hexo: 3.8.0</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Darwin 18.5.0 darwin x64</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">node: 10.15.3</span><br><span class="line">v8: 6.8.275.32-node.51</span><br><span class="line">uv: 1.23.2</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 64</span><br><span class="line">nghttp2: 1.34.0</span><br><span class="line">napi: 3</span><br><span class="line">openssl: 1.1.0j</span><br><span class="line">icu: 62.1</span><br><span class="line">unicode: 11.0</span><br><span class="line">cldr: 33.1</span><br><span class="line">tz: 2018e</span><br></pre></td></tr></table></figure><p></p><p>这样hexo就安装完成了</p><h3 id="hexo命令介绍"><a href="#hexo命令介绍" class="headerlink" title="hexo命令介绍"></a>hexo命令介绍</h3><p>官网已经介绍的比较详细了这里就不再赘述了<br>详情请看官方命令地址：<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands</a></p><h3 id="hexo快速新建博客"><a href="#hexo快速新建博客" class="headerlink" title="hexo快速新建博客"></a>hexo快速新建博客</h3><p>初始化Hexo，在命令行（即Git Bash）依次运行以下命令即可：</p><p>以下，即存放Hexo初始化文件的路径， 即站点目录。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init myproject</span><br><span class="line">$ cd myproject</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p></p><p>新建完成后，在路径下，会产生这些文件和文件夹：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ tree</span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p></p><table><thead><tr><th>目录名或者文件名</th><th>详情介绍</th></tr></thead><tbody><tr><td>_config.yml</td><td>hexo 全局配置文件</td></tr><tr><td>package.json</td><td>nodejs 包配置文件</td></tr><tr><td>scaffolds</td><td>hexo模版文件夹hexo new filename 会对应根据模版文件生成文件</td></tr><tr><td>source</td><td>项目源代码文件目录</td></tr><tr><td>_drafts</td><td>为草稿原文件目录</td></tr><tr><td>_posts</td><td>项目发布文件目录 项目最终会根据这个目录下的文件生成html</td></tr><tr><td>themes</td><td>博客主题存放目录</td></tr></tbody></table><p>注：</p><p>hexo相关命令均在站点目录下，用Git Bash运行。</p><p>站点配置文件：站点目录下的_config.yml。</p><p>​ 路径为<folder>_config.yml</folder></p><p>主题配置文件：站点目录下的themes文件夹下的，主题文件夹下的_config.yml。</p><p>​ 路径为<folder>\themes\&lt;主题文件夹&gt;_config.yml</folder></p><ol start="2"><li>启动服务器。在路径下，命令行（即Git Bash）输入以下命令，运行即可：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><ol start="3"><li>浏览器访问网址： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就可以预览博客了<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556363959958.png" alt="图片"></li></ol><p>下一篇 我将介绍如何搭建自己的blog</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Apr 28 2019 15:11:59 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;如果你和我一样是小白，那么恭喜你！看完这篇文章，你也可以拥有一个这样的博客啦！&lt;/p&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; cla
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.liuyong520.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.liuyong520.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>利用hexo搭建博客</title>
    <link href="http://www.liuyong520.cn/2017/08/27/creatblog/"/>
    <id>http://www.liuyong520.cn/2017/08/27/creatblog/</id>
    <published>2017-08-27T02:56:51.000Z</published>
    <updated>2019-04-27T16:22:09.846Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Apr 28 2019 15:11:59 GMT+0800 (GMT+08:00) --><p>如果你和我一样是小白，那么恭喜你！看完这篇文章，你也可以拥有一个这样的博客</p><hr><p>前面已经介绍过如何搭建hexo环境，现在我将介绍如何用hexo搭建自己的blog</p><h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><h3 id="实施方案"><a href="#实施方案" class="headerlink" title="实施方案"></a>实施方案</h3><h4 id="方案一：GithubPages"><a href="#方案一：GithubPages" class="headerlink" title="方案一：GithubPages"></a>方案一：GithubPages</h4><ol><li><p>创建Github账号</p></li><li><p>创建仓库 ，仓库名为：&lt;Github账号名称&gt;.github.io<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556370583717.png" alt="仓库名称"><br>点击settings<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556370714512.png" alt="settings"><br>往下翻就能看到githubPages，我这里是已经配置过了的，没有配置可以是select themes ，点击能够选择SkyII主题。（SkyII主题也是和hexo类似的blog的框架，这里不与介绍）</p></li><li><p>将本地Hexo博客推送到GithubPages<br>3.1. 安装hexo-deployer-git插件。在命令行（即Git Bash）运行以下命令即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>3.2. 添加SSH key。</p><ul><li><p>创建一个 SSH key 。在命令行（即Git Bash）输入以下命令， 回车三下即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure></li><li><p>添加到 github。 复制密钥文件内容（路径形如C:\Users\Administrator.ssh\id_rsa.pub），粘贴到New SSH Key即可。</p></li><li><p>测试是否添加成功。在命令行（即Git Bash）依次输入以下命令，返回“You’ve successfully authenticated”即成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>3.3. 修改_config.yml（在站点目录下）。文件末尾修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>注意：上面仓库地址写ssh地址，不写http地址。<br>3.4. 推送到GithubPages。在命令行（即Git Bash）依次输入以下命令， 返回INFO Deploy done: git即成功推送：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>等待1分钟左右，浏览器访问网址： https://&lt;Github账号名称&gt;.github.io<br>至此，您的Hexo博客已经搭建在GithubPages, 域名为https://&lt;Github账号名称&gt;.github.io。</p></li></ul></li></ol><h4 id="方案二：GithubPages-域名"><a href="#方案二：GithubPages-域名" class="headerlink" title="方案二：GithubPages + 域名"></a>方案二：GithubPages + 域名</h4><p>在方案一的基础上，添加自定义域名（您购买的域名）。我的是从阿里云购买的。</p><ol><li><p>域名解析<br>类型选择为 CNAME；</p><p>主机记录即域名前缀，填写为www；</p><p>记录值填写为&lt;Github账号名称&gt;.github.io；</p><p>解析线路，TTL 默认即可<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/屏幕快照_2019-04-27_21.28.51.png" alt="阿里云"><br>点击 liuyong520.cn<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556371873729.png" alt="域名解析"></p></li><li><p>仓库设置。<br>2.1. 打开博客仓库设置：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io/settings</p><p>2.2. 在Custom domain下，填写自定义域名，点击save。</p><p>2.3. 在站点目录的source文件夹下，创建并打开CNAME.txt，写入你的域名（如<a href="http://www.liuyong520.cn），保存，并重命名为CNAME。如图" target="_blank" rel="noopener">www.liuyong520.cn），保存，并重命名为CNAME。如图</a><br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556370801480.png" alt="githubpages"></p><ol start="3"><li><p>等待10分钟左右。<br>浏览器访问自定义域名。<a href="http://www.liuyong520.cn">http://www.liuyong520.cn</a></p><p>至此，您的Hexo博客已经解析到自定义域名，https://&lt;Github账号名称&gt;.github.io依然可用。</p></li></ol><h4 id="方案三：GithubPages-CodingPages-域名"><a href="#方案三：GithubPages-CodingPages-域名" class="headerlink" title="方案三：GithubPages + CodingPages + 域名"></a>方案三：GithubPages + CodingPages + 域名</h4></li></ol><p>GithubPages 在国内较慢，百度不收录，而CodingPages 在国外较快。所以在方案二的基础上，添加CodingPages 。</p><ol><li>创建Coding账号</li><li>创建仓库， 仓库名为：&lt;Coding账号名称&gt;</li><li>进入项目里『代码』页面，点击『一键开启静态 Pages』，稍等片刻CodingPages即可部署成功。<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556380352090.png" alt="enter description here"></li><li><p>将本地Hexo博客推送到CodingPages<br>4.1. 鉴于创建GithubPages 时，已经生成过公钥。可直接复制密钥文件内容（路径形如C:\Users\Administrator.ssh\id_rsa.pub）， 粘贴到新增公钥。<br>4.2. 测试是否添加成功。在命令行（即Git Bash）依次输入以下命令，返回“You’ve successfully authenticated”即成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@git.coding.net</span><br><span class="line">$ yes</span><br></pre></td></tr></table></figure><p>4.3. 修改_config.yml（在存放Hexo初始化文件的路径下）。文件末尾修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">- type: git</span><br><span class="line">  repo: git@git.dev.tencent.com:&lt;Coding账号名称&gt;/&lt;Coding账号名称&gt;.git</span><br><span class="line"> branch: master</span><br></pre></td></tr></table></figure><p>4.4. 推送到GithubPages。在命令行（即Git Bash）依次输入以下命令， 返回INFO Deploy done: git即成功推送：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></li><li><p>域名解析</p><ol><li><p>添加 CNAME 记录指向 &lt;Coding账号名称&gt;.coding.me</p><p>类型选择为 CNAME；</p><p>主机记录即域名前缀，填写为www；</p><p>记录值填写为&lt;Github账号名称&gt;.coding.me；</p><p>解析线路，TTL 默认即可。</p></li><li><p>添加 两条A 记录指向 192.30.252.153和192.30.252.154</p><p>类型选择为 A；</p><p>主机记录即域名前缀，填写为@；</p><p>记录值填写为192.30.252.153和192.30.252.154；</p><p>解析线路，境外或谷歌。<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556382087569.png" alt="enter description here"></p><ol start="3"><li>在『Pages 服务』设置页（<a href="https://dev.tencent.com/u/" target="_blank" rel="noopener">https://dev.tencent.com/u/</a>&lt;Coding账号名称&gt;/p/&lt;Coding账号名称&gt;/git/pages/settings）中绑定自定义域名<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556382059000.png" alt="enter description here"></li><li>至此，您的Hexo博客已经解析到自定义域名，https://&lt;Github账号名称&gt;.github.io和https://&lt;Coding账号名称&gt;.coding.me依然可用。</li></ol></li></ol></li></ol><h4 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h4><ul><li><p>选择主题<br>hexo主题是非常多的，默认的主题是landscape，您可以自主的在hexo官方网站上挑选自己喜欢的主题，网站：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br>推荐以下主题：<br><a href="https://github.com/shenliyang/hexo-theme-snippet#hexo-theme-snippet" target="_blank" rel="noopener">snippet</a><br><a href="https://github.com/iTimeTraveler/hexo-theme-hiero#hiero" target="_blank" rel="noopener">Hiero</a><br><a href="https://github.com/tangkunyin/hexo-theme-jsimple#jsimple" target="_blank" rel="noopener">Jsimple</a><br><a href="https://github.com/chaooo/hexo-theme-BlueLake#bluelake" target="_blank" rel="noopener">BlueLake</a><br><a href="https://github.com/cofess/hexo-theme-pure" target="_blank" rel="noopener">Pure</a><br><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">Next</a><br><a href="https://github.com/ppoffice/hexo-theme-hueman" target="_blank" rel="noopener">Hueman</a><br>我这里选择的是Pure。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/cofess/hexo-theme-pure.git  themes/pure</span><br></pre></td></tr></table></figure><p>此时会在themes 目录下生成 pure目录<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556365705175.png" alt="目录"></p></li><li><p>应用主题<br>更改站点配置_config.yml 修改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: &lt;主题文件夹的名称&gt;</span><br></pre></td></tr></table></figure></li><li><p>主题优化<br>以上主题都有比较详细的说明文档，本节主要解决主题优化的常见问题。</p><p>主题优化一般包括：</p><ul><li>设置「RSS」</li><li>添加「标签」页面</li><li>添加「分类」页面</li><li>设置「字体」</li><li>设置「代码高亮主题」</li><li>侧边栏社交链接</li><li>开启打赏功能</li><li>设置友情链接</li><li>腾讯公益404页面</li><li>站点建立时间</li><li>订阅微信公众号</li><li>设置「动画效果」</li><li>设置「背景动画」<br>下一次我将针对Pure进行主题方面的相关配置，以及讲解一下hexo主题的的实现原理的。这样你们针对不同的主题也就都能配置了。</li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Apr 28 2019 15:11:59 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;如果你和我一样是小白，那么恭喜你！看完这篇文章，你也可以拥有一个这样的博客&lt;/p&gt;&lt;hr&gt;&lt;p&gt;前面已经介绍过如何搭建hexo环境，现在我将介绍
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.liuyong520.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.liuyong520.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>node.js环境搭建</title>
    <link href="http://www.liuyong520.cn/2017/08/26/nodejs-install/"/>
    <id>http://www.liuyong520.cn/2017/08/26/nodejs-install/</id>
    <published>2017-08-26T01:56:51.000Z</published>
    <updated>2019-04-27T09:42:47.606Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Apr 28 2019 15:11:59 GMT+0800 (GMT+08:00) --><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>登录<img src="https://nodejs.org/en/" alt="node.js">官网下载对应的exe安装包。下载地址为：<img src="https://nodejs.org/en/download/" alt="https://nodejs.org/en/download/"><br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556354057260.png" alt="nodejs下载页面"><br>你可以根据不同平台系统选择你需要的Node.js安装包。</p><p>Node.js 历史版本下载地址：<a href="https://nodejs.org/dist/" target="_blank" rel="noopener">https://nodejs.org/dist/</a></p><p>注意：Linux上安装Node.js需要安装Python 2.6 或 2.7 ，不建议安装Python 3.0以上版本。</p><hr><h3 id="windows-上安装-node-js"><a href="#windows-上安装-node-js" class="headerlink" title="windows 上安装 node.js"></a>windows 上安装 node.js</h3><p>你可以采用以下两种方式来安装。</p><p>1、Windows 安装包(.msi)<br>32 位安装包下载地址 : <a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi</a></p><p>64 位安装包下载地址 : <a href="https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi</a></p><p>本文实例以 v0.10.26 版本为例，其他版本类似， 安装步骤：</p><p>步骤 1 : 双击下载后的安装包 v0.10.26，如下所示：<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356341458.png" alt="安装图"><br>步骤 2: 点击以上的Run(运行)，将出现如下界面：<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356418282.png" alt="安装图"><br>步骤 3 : 勾选接受协议选项，点击 next（下一步） 按钮 :<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356471486.png" alt="enter description here"><br>步骤 4 : Node.js默认安装目录为 “C:\Program Files\nodejs\” , 你可以修改目录，并点击 next（下一步）：<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356504568.png" alt="enter description here"><br>步骤 5 : 点击树形图标来选择你需要的安装模式 , 然后点击下一步 next（下一步）<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356545218.png" alt="enter description here"><br>步骤 6 :点击 Install（安装） 开始安装Node.js。你也可以点击 Back（返回）来修改先前的配置。 然后并点击 next（下一步）：<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356578858.png" alt="enter description here"><br>点击 Finish（完成）按钮退出安装向导。<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356605083.png" alt="完成图"><br>检测PATH环境变量是否配置了Node.js，点击开始=》运行=》输入”cmd” =&gt; 输入命令”path”，输出如下结果：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PATH=C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Windows\system32;</span><br><span class="line">C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;</span><br><span class="line">c:\python32\python;C:\MinGW\bin;C:\Program Files\GTK2-Runtime\lib;</span><br><span class="line">C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files\nodejs\;</span><br><span class="line">C:\Users\rg\AppData\Roaming\npm</span><br></pre></td></tr></table></figure><p></p><p>我们可以看到环境变量中已经包含了C:\Program Files\nodejs\</p><p>检查Node.js版本<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E:\&gt; node --version</span><br><span class="line">v0.10.26</span><br></pre></td></tr></table></figure><p></p><p>2、Windows 二进制文件 (.exe)安装<br>32 位安装包下载地址 : <a href="http://nodejs.org/dist/v0.10.26/node.exe" target="_blank" rel="noopener">http://nodejs.org/dist/v0.10.26/node.exe</a></p><p>64 位安装包下载地址 : <a href="http://nodejs.org/dist/v0.10.26/x64/node.exe" target="_blank" rel="noopener">http://nodejs.org/dist/v0.10.26/x64/node.exe</a><br>安装步骤</p><p>步骤 1 : 双击下载的安装包 Node.exe ，将出现如下界面 :<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356900243.png" alt="enter description here"><br>点击 Run（运行）按钮将出现命令行窗口：<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356930002.png" alt="enter description here"><br>版本测试<br>进入 node.exe 所在的目录，如下所示<br><img src="https://www.github.com/liuyong520/pic/raw/master/小书匠/1556356957166.png" alt="enter description here"><br>如果你获得以上输出结果，说明你已经成功安装了Node.js。</p><h3 id="linux安装node-js"><a href="#linux安装node-js" class="headerlink" title="linux安装node.js"></a>linux安装node.js</h3><p>直接使用已编译好的包<br>Node 官网已经把 linux 下载版本更改为已编译好的版本了，我们可以直接下载解压后使用：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz    // 下载</span><br><span class="line"># tar xf  node-v10.9.0-linux-x64.tar.xz       // 解压</span><br><span class="line"># cd node-v10.9.0-linux-x64/                  // 进入解压目录</span><br><span class="line"># ./bin/node -v                               // 执行node命令 查看版本</span><br><span class="line">v10.9.0</span><br></pre></td></tr></table></figure><p></p><p>解压文件的 bin 目录底下包含了 node、npm 等命令，我们可以使用 ln 命令来设置软连接<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/software/nodejs/bin/npm   /usr/local/bin/ </span><br><span class="line">ln -s /usr/software/nodejs/bin/node   /usr/local/bin/</span><br></pre></td></tr></table></figure><p></p><p>Ubuntu 源码安装 Node.js<br>以下部分我们将介绍在 Ubuntu Linux 下使用源码安装 Node.js 。 其他的 Linux 系统，如 Centos 等类似如下安装步骤。</p><p>在 Github 上获取 Node.js 源码：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo git clone https://github.com/nodejs/node.git</span><br><span class="line">Cloning into &apos;node&apos;...</span><br></pre></td></tr></table></figure><p></p><p>修改目录权限：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod -R 755 node</span><br></pre></td></tr></table></figure><p></p><p>使用 ./configure 创建编译文件，并按照：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd node</span><br><span class="line">$ sudo ./configure</span><br><span class="line">$ sudo make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure><p></p><p>查看 node 版本：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node --version</span><br><span class="line">v0.10.25</span><br></pre></td></tr></table></figure><p></p><p>Ubuntu apt-get命令安装<br>命令格式如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p></p><p>CentOS 下源码安装 Node.js<br>1、下载源码，你需要在<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a> 下载最新的Nodejs版本，本文以v0.10.24为例:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line">wget http://nodejs.org/dist/v0.10.24/node-v0.10.24.tar.gz</span><br></pre></td></tr></table></figure><p></p><p>2、解压源码<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf node-v0.10.24.tar.gz</span><br></pre></td></tr></table></figure><p></p><p>3、 编译安装<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd node-v0.10.24</span><br><span class="line">./configure --prefix=/usr/local/node/0.10.24</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p></p><p>4、 配置NODE_HOME，进入profile编辑环境变量<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p></p><p>设置nodejs环境变量，在 <em>export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</em> 一行的上面添加如下内容:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#set for nodejs</span><br><span class="line">export NODE_HOME=/usr/local/node/0.10.24</span><br><span class="line">export PATH=$NODE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p></p><p>:wq保存并退出，编译/etc/profile 使配置生效<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p></p><p>验证是否安装配置成功<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p></p><p>输出 v0.10.24 表示配置成功<br>npm模块安装路径:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/node/0.10.24/lib/node_modules/</span><br></pre></td></tr></table></figure><p></p><p>注：Nodejs 官网提供了编译好的Linux二进制包，你也可以下载下来直接应用。</p><h3 id="Mac-OS-上安装"><a href="#Mac-OS-上安装" class="headerlink" title="Mac OS 上安装"></a>Mac OS 上安装</h3><p>你可以通过以下两种方式在 Mac OS 上来安装 node：</p><p>1、在官方下载网站</p><p>下载 pkg 安装包，直接点击安装即可。<br>2、使用 brew 命令来安装：<br></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Apr 28 2019 15:11:59 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;安装node-js&quot;&gt;&lt;a href=&quot;#安装node-js&quot; class=&quot;headerlink&quot; title=&quot;安装node.js
      
    
    </summary>
    
      <category term="node" scheme="http://www.liuyong520.cn/categories/node/"/>
    
    
      <category term="node" scheme="http://www.liuyong520.cn/tags/node/"/>
    
  </entry>
  
</feed>
